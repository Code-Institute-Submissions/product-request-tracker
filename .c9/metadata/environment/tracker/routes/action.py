{"filter":false,"title":"action.py","tooltip":"/tracker/routes/action.py","undoManager":{"mark":42,"position":42,"stack":[[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":27,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["    s3_resource = boto3.resource('s3')","    my_bucket = s3_resource.Bucket(S3_BUCKET)","    summaries = my_bucket.objects.all()",""],"id":3}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["def action_add(post_id):",""],"id":4}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":14},"action":"remove","lines":["add"],"id":5},{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"insert","lines":["f"]},{"start":{"row":27,"column":12},"end":{"row":27,"column":13},"action":"insert","lines":["i"]},{"start":{"row":27,"column":13},"end":{"row":27,"column":14},"action":"insert","lines":["l"]},{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["e"]},{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":27,"column":17},"end":{"row":27,"column":24},"action":"remove","lines":["post_id"],"id":6}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["@action.route('/action/outstanding')",""],"id":7}],[{"start":{"row":27,"column":23},"end":{"row":27,"column":34},"action":"remove","lines":["outstanding"],"id":8},{"start":{"row":27,"column":23},"end":{"row":27,"column":24},"action":"insert","lines":["f"]},{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":["i"]},{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"insert","lines":["l"]},{"start":{"row":27,"column":26},"end":{"row":27,"column":27},"action":"insert","lines":["e"]},{"start":{"row":27,"column":27},"end":{"row":27,"column":28},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":10,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["s3 = boto3.client(","    's3',","    aws_access_key_id=S3_KEY,","    aws_access_access_id=S3_SECRET)","","",""],"id":11}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":12}],[{"start":{"row":13,"column":34},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":5,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["import boto3","","from .settings import S3_BUCKET, S3_KEY, S3_SECRET",""],"id":14}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["",""],"id":15}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"remove","lines":["    "],"id":16}],[{"start":{"row":41,"column":39},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"remove","lines":["    "],"id":18}],[{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":19}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":4},"action":"insert","lines":["    "],"id":20}],[{"start":{"row":43,"column":4},"end":{"row":44,"column":0},"action":"remove","lines":["",""],"id":21}],[{"start":{"row":43,"column":4},"end":{"row":43,"column":5},"action":"insert","lines":["r"],"id":22},{"start":{"row":43,"column":5},"end":{"row":43,"column":6},"action":"insert","lines":["e"]},{"start":{"row":43,"column":6},"end":{"row":43,"column":7},"action":"insert","lines":["t"]},{"start":{"row":43,"column":7},"end":{"row":43,"column":8},"action":"insert","lines":["u"]},{"start":{"row":43,"column":8},"end":{"row":43,"column":9},"action":"insert","lines":["r"]},{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":["n"]}],[{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"remove","lines":["    return",""],"id":23},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["    return render_template('action_add.html', post=post)",""]}],[{"start":{"row":43,"column":28},"end":{"row":43,"column":38},"action":"remove","lines":["action_add"],"id":24},{"start":{"row":43,"column":28},"end":{"row":43,"column":29},"action":"insert","lines":["f"]},{"start":{"row":43,"column":29},"end":{"row":43,"column":30},"action":"insert","lines":["i"]},{"start":{"row":43,"column":30},"end":{"row":43,"column":31},"action":"insert","lines":["l"]},{"start":{"row":43,"column":31},"end":{"row":43,"column":32},"action":"insert","lines":["e"]},{"start":{"row":43,"column":32},"end":{"row":43,"column":33},"action":"insert","lines":["s"]}],[{"start":{"row":43,"column":41},"end":{"row":43,"column":45},"action":"remove","lines":["post"],"id":25},{"start":{"row":43,"column":41},"end":{"row":43,"column":50},"action":"insert","lines":["my_bucket"]}],[{"start":{"row":43,"column":51},"end":{"row":43,"column":55},"action":"remove","lines":["post"],"id":26},{"start":{"row":43,"column":51},"end":{"row":43,"column":60},"action":"insert","lines":["my_bucket"]}],[{"start":{"row":43,"column":60},"end":{"row":43,"column":61},"action":"insert","lines":[","],"id":27}],[{"start":{"row":43,"column":61},"end":{"row":43,"column":62},"action":"insert","lines":[" "],"id":28},{"start":{"row":43,"column":62},"end":{"row":43,"column":63},"action":"insert","lines":["f"]},{"start":{"row":43,"column":63},"end":{"row":43,"column":64},"action":"insert","lines":["i"]},{"start":{"row":43,"column":64},"end":{"row":43,"column":65},"action":"insert","lines":["l"]},{"start":{"row":43,"column":65},"end":{"row":43,"column":66},"action":"insert","lines":["e"]},{"start":{"row":43,"column":66},"end":{"row":43,"column":67},"action":"insert","lines":["s"]}],[{"start":{"row":43,"column":67},"end":{"row":43,"column":68},"action":"insert","lines":["="],"id":29}],[{"start":{"row":43,"column":68},"end":{"row":43,"column":77},"action":"insert","lines":["summaries"],"id":30}],[{"start":{"row":7,"column":5},"end":{"row":7,"column":6},"action":"insert","lines":["t"],"id":31},{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"insert","lines":["r"]},{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"insert","lines":["a"]},{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"insert","lines":["c"]},{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["k"]},{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":["e"]},{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"insert","lines":["r"]}],[{"start":{"row":15,"column":15},"end":{"row":15,"column":22},"action":"remove","lines":["access_"],"id":32}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":27},"action":"remove","lines":["    aws_access_key_id=S3_KEY,","    aws_access_id=S3_SECRET"],"id":33},{"start":{"row":14,"column":0},"end":{"row":15,"column":43},"action":"insert","lines":["            aws_access_key_id=S3_KEY,","            aws_secret_access_key=S3_SECRET"]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "],"id":34},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "],"id":35},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":37,"column":16},"end":{"row":37,"column":22},"action":"remove","lines":["action"],"id":36},{"start":{"row":37,"column":16},"end":{"row":37,"column":17},"action":"remove","lines":["/"]}],[{"start":{"row":14,"column":22},"end":{"row":14,"column":28},"action":"remove","lines":["S3_KEY"],"id":40},{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"insert","lines":["'"]},{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["'"]}],[{"start":{"row":14,"column":23},"end":{"row":14,"column":44},"action":"insert","lines":["eAKIA2Z4DI4HTNUAAT4WO"],"id":41}],[{"start":{"row":15,"column":26},"end":{"row":15,"column":35},"action":"remove","lines":["S3_SECRET"],"id":42},{"start":{"row":15,"column":26},"end":{"row":15,"column":27},"action":"insert","lines":["'"]}],[{"start":{"row":15,"column":27},"end":{"row":15,"column":67},"action":"insert","lines":["kcc2jlUz9XujMDILWV4B3/pNXfE6kushXPA8bWHb"],"id":43}],[{"start":{"row":15,"column":67},"end":{"row":15,"column":68},"action":"insert","lines":["'"],"id":44}],[{"start":{"row":40,"column":35},"end":{"row":40,"column":44},"action":"remove","lines":["S3_BUCKET"],"id":45},{"start":{"row":40,"column":35},"end":{"row":40,"column":36},"action":"insert","lines":["'"]},{"start":{"row":40,"column":36},"end":{"row":40,"column":37},"action":"insert","lines":["'"]}],[{"start":{"row":40,"column":36},"end":{"row":40,"column":59},"action":"insert","lines":["product-request-tracker"],"id":46}],[{"start":{"row":0,"column":0},"end":{"row":201,"column":0},"action":"remove","lines":["from flask import Blueprint, render_template, request, redirect, url_for, flash","from flask_login import current_user, login_required","from datetime import datetime","import os","from werkzeug.utils import secure_filename","import boto3","","from tracker.settings import S3_BUCKET, S3_KEY, S3_SECRET","from tracker.extensions import db","from tracker.models import User, Posts, Suppliers, Actions","","","s3 = boto3.client(","    's3',","    aws_access_key_id='eAKIA2Z4DI4HTNUAAT4WO',","    aws_secret_access_key='kcc2jlUz9XujMDILWV4B3/pNXfE6kushXPA8bWHb'",")","","","action = Blueprint('action', __name__)","IMAGE_UPLOADS = '/home/ubuntu/environment/tracker/static/uploads/img'","ALLOWED_IMAGE_EXTENSIONS = ['PNG', 'JPG', 'JEPG']","","","def allowed_image(filename):","","    if '.' not in filename:","        return False","","    ext = filename.rsplit('.', 1)[1]","","    if ext.upper() in ALLOWED_IMAGE_EXTENSIONS:","        return True","    else:","        return False","","","@action.route('/files')","def action_files():","    s3_resource = boto3.resource('s3')","    my_bucket = s3_resource.Bucket('product-request-tracker')","    summaries = my_bucket.objects.all()","","    return render_template('files.html', my_bucket=my_bucket, files=summaries)","","","@action.route('/action/add/<int:post_id>', methods=['GET', 'POST'])","@login_required","def action_add(post_id):","    post = Posts.query.get_or_404(post_id)","    if request.method == 'POST':","","        new_action = request.form.to_dict()","        if request.files['image_file']:","","            image_file = request.files['image_file']","","            if image_file.filename == '':","                flash('Please ensure the image has a filename!', 'error'","                      )","                return redirect(url_for('action.action_add',","                                post_id=post.id))","","            if allowed_image(image_file.filename):","                filename = secure_filename(image_file.filename)","                image_file.save(os.path.join(IMAGE_UPLOADS, filename))","                new_action['image'] = 'uploads/img/' + filename","            else:","","                flash('That image extension is not allowed!', 'error')","                return redirect(url_for('action.action_add',","                                post_id=post.id))","","        new_action['created_by'] = current_user.id","        new_action['posts_id'] = post.id","","        new_action = Actions(**new_action)","        db.session.add(new_action)","        db.session.commit()","","        flash('New action has been added for {}.'.format(post.title),","              'success')","        return redirect(url_for('main.index'))","","    return render_template('action_add.html', post=post)","","","@action.route('/action/edit/<int:action_id>', methods=['GET', 'POST'])","@login_required","def action_edit(action_id):","    action = Actions.query.get_or_404(action_id)","    if request.method == 'POST':","","        action.stage = request.form['stage']","        action.content = request.form['content']","        action.image = request.form['image']","        action.layer_type = request.form['layer_type']","        action.case_per_layer = request.form['case_per_layer']","        action.total_layers = request.form['total_layers']","        action.ex_layer_type = request.form['ex_layer_type']","        action.ex_case_per_layer = request.form['ex_case_per_layer']","        action.ex_total_layers = request.form['ex_total_layers']","        action.total_cases = request.form['total_cases']","        action.ex_total_cases = request.form['ex_total_cases']","","        if request.files['image_file']:","","            image_file = request.files['image_file']","","            if image_file.filename == '':","                flash('Please ensure the image has a filename!', 'error'","                      )","                return redirect(url_for('action.action_edit',","                                action_id=action.id))","","            if allowed_image(image_file.filename):","                filename = secure_filename(image_file.filename)","                image_file.save(os.path.join(IMAGE_UPLOADS, filename))","                action.image = 'uploads/img/' + filename","            else:","","                flash('That image extension is not allowed!', 'error')","                return redirect(url_for('action.action_edit',","                                action_id=action.id))","","        db.session.commit()","        flash('Action updated for {}.'.format(action.action_post.title),","              'success')","        return redirect(url_for('action.action_outstanding'))","","    return render_template('action_edit.html', action=action)","","","@action.route('/action/outstanding')","@login_required","def action_outstanding():","    if current_user.user_type == 0:","        actions = \\","            Actions.query.order_by(Actions.created_on.desc()).all()","    else:","        actions = \\","            Actions.query.filter_by(stage=int(current_user.user_type)).order_by(Actions.created_on.desc()).all()","    if not actions:","        flash('There are no outstanding actions', 'information')","","    return render_template('action_outstanding.html', actions=actions)","","","@action.route('/action/outstanding/<int:post_id>', methods=['GET',","              'POST'])","@login_required","def post_actions(post_id):","    if current_user.user_type == 0:","        actions = \\","            Actions.query.filter_by(posts_id=post_id).order_by(Actions.created_on.desc()).all()","    else:","        actions = Actions.query.filter_by(posts_id=post_id,","                stage=int(current_user.user_type)).order_by(Actions.created_on.desc()).first()","","        if actions:","            return redirect(url_for('action.action_answer',","                            action_id=actions.id))","        else:","            flash('There are no actions for this request', 'information'","                  )","            return redirect(url_for('main.index'))","","    if not actions:","        flash('There are no actions for this request', 'information')","","    return render_template('action_outstanding.html', actions=actions)","","","@action.route('/action/answer/<int:action_id>', methods=['GET', 'POST'])","@login_required","def action_answer(action_id):","    action = Actions.query.get_or_404(action_id)","","    if request.method == 'POST':","","        action.feedback = request.form['feedback']","        action.approval = request.form['approval']","        action.approved_by = current_user.id","        action.approved_on = datetime.utcnow()","","        post = Posts.query.get_or_404(action.posts_id)","        if action.stage == 1:","            post.healthandsafety = action.approval","        elif action.stage == 2:","            post.quality = action.approval","        elif action.stage == 3:","            post.cagefill = action.approval","        elif action.stage == 4:","            post.restaurantimpact = action.approval","","        db.session.commit()","        flash('Outstanding Action for {} complete!'.format(action.action_post.title),","              'success')","        return redirect(url_for('action.action_outstanding'))","","    return render_template('action_answer.html', action=action)",""],"id":54},{"start":{"row":0,"column":0},"end":{"row":125,"column":63},"action":"insert","lines":["from flask import Blueprint, render_template, request, redirect, url_for, flash","from flask_login import current_user, login_required","from datetime import datetime","import os","","from tracker.extensions import db","from tracker.models import User, Posts, Suppliers, Actions","","action = Blueprint('action', __name__)","IMAGE_UPLOADS = '/home/ubuntu/environment/tracker/static/uploads/img'","","","@action.route('/action/add/<int:post_id>', methods=['GET', 'POST'])","@login_required","def action_add(post_id):","    post = Posts.query.get_or_404(post_id)","    if request.method == 'POST':","","        new_action = request.form.to_dict()","        new_action['created_by'] = current_user.id","        new_action['posts_id'] = post.id","","        new_action = Actions(**new_action)","        db.session.add(new_action)","        db.session.commit()","","        flash('New action has been added for {}.'.format(post.title),","              'success')","        return redirect(url_for('main.index'))","","    return render_template('action_add.html', post=post)","","","@action.route('/action/edit/<int:action_id>', methods=['GET', 'POST'])","@login_required","def action_edit(action_id):","    action = Actions.query.get_or_404(action_id)","    if request.method == 'POST':","","        action.stage = request.form['stage']","        action.content = request.form['content']","        action.image = request.form['image']","        action.layer_type = request.form['layer_type']","        action.case_per_layer = request.form['case_per_layer']","        action.total_layers = request.form['total_layers']","        action.ex_layer_type = request.form['ex_layer_type']","        action.ex_case_per_layer = request.form['ex_case_per_layer']","        action.ex_total_layers = request.form['ex_total_layers']","        action.total_cases = request.form['total_cases']","        action.ex_total_cases = request.form['ex_total_cases']","","        db.session.commit()","        flash('Action updated for {}.'.format(action.action_post.title),","              'success')","        return redirect(url_for('action.action_outstanding'))","","    return render_template('action_edit.html', action=action)","","","@action.route('/action/outstanding')","@login_required","def action_outstanding():","    if current_user.user_type == 0:","        actions = \\","            Actions.query.order_by(Actions.created_on.desc()).all()","    else:","        actions = \\","            Actions.query.filter_by(stage=int(current_user.user_type)).order_by(Actions.created_on.desc()).all()","    if not actions:","        flash('There are no outstanding actions', 'information')","","    return render_template('action_outstanding.html', actions=actions)","","","@action.route('/action/outstanding/<int:post_id>', methods=['GET',","              'POST'])","@login_required","def post_actions(post_id):","    if current_user.user_type == 0:","        actions = \\","            Actions.query.filter_by(posts_id=post_id).order_by(Actions.created_on.desc()).all()","    else:","        actions = Actions.query.filter_by(posts_id=post_id,","                stage=int(current_user.user_type)).order_by(Actions.created_on.desc()).first()","","        if actions:","            return redirect(url_for('action.action_answer',","                            action_id=actions.id))","        else:","            flash('There are no actions for this request', 'information'","                  )","            return redirect(url_for('main.index'))","","    if not actions:","        flash('There are no actions for this request', 'information')","","    return render_template('action_outstanding.html', actions=actions)","","","@action.route('/action/answer/<int:action_id>', methods=['GET', 'POST'])","@login_required","def action_answer(action_id):","    action = Actions.query.get_or_404(action_id)","","    if request.method == 'POST':","","        action.feedback = request.form['feedback']","        action.approval = request.form['approval']","        action.approved_by = current_user.id","","        post = Posts.query.get_or_404(action.posts_id)","        if action.stage == 1:","            post.healthandsafety = action.approval","        elif action.stage == 2:","            post.quality = action.approval","        elif action.stage == 3:","            post.cagefill = action.approval","        elif action.stage == 4:","            post.restaurantimpact = action.approval","","        db.session.commit()","        flash('Outstanding Action for {} complete!'.format(action.action_post.title),","              'success')","        return redirect(url_for('action.action_outstanding'))","","    return render_template('action_answer.html', action=action)"]}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["IMAGE_UPLOADS = '/home/ubuntu/environment/tracker/static/uploads/img'",""],"id":55}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":0},"end":{"row":9,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1582576393687,"hash":"f819d7200a63e8d5ca3c0b75f8500363932ed89f"}